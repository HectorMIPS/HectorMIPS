package com.github.hectormips.tlb

//import chisel3._
//import chisel3.iotesters.{PeekPokeTester,ChiselFlatSpec,Driver}
//import org.scalatest._
//class TLBtests(dut:tlb) extends PeekPokeTester(dut){
//  myinit(dut)
//
//  //s0:{'vpn2': '000', 'odd_page': '0', 'asid': '0', 'found': '1', 'index': '0', 'pfn': '111'}
//  //s1:{'vpn2': '000', 'odd_page': '1', 'asid': '0', 'found': '1', 'index': '0', 'pfn': '022'}
//  poke(dut.io.s0.vpn2,"h000".U)
//  poke(dut.io.s0.odd_page,false.B)
//  poke(dut.io.s0.asid,"h0".U)
//  poke(dut.io.s1.vpn2,"h000".U)
//  poke(dut.io.s1.odd_page,true.B)
//  poke(dut.io.s1.asid,"h0".U)
//  step(1)
//  expect(dut.io.s0.found,true.B)
//  expect(dut.io.s0.index,0.U)
//  expect(dut.io.s0.pfn,"h111".U)
//  expect(dut.io.s0.c,3.U)
//  expect(dut.io.s0.d,1.U)
//  expect(dut.io.s0.v,1.U)
//  expect(dut.io.s1.found,true.B)
//  expect(dut.io.s1.index,0.U)
//  expect(dut.io.s1.pfn,"h022".U)
//  expect(dut.io.s1.c,3.U)
//  expect(dut.io.s1.d,1.U)
//  expect(dut.io.s1.v,1.U)
//
//
//  //s0:{'vpn2': '000', 'odd_page': '1', 'asid': '0', 'found': '1', 'index': '0', 'pfn': '022'}
//  //s1:{'vpn2': '000', 'odd_page': '1', 'asid': '1', 'found': '0', 'index': 'x', 'pfn': 'xxx'}
//  poke(dut.io.s0.vpn2,"h000".U)
//  poke(dut.io.s0.odd_page,true.B)
//  poke(dut.io.s0.asid,"h0".U)
//  poke(dut.io.s1.vpn2,"h000".U)
//  poke(dut.io.s1.odd_page,true.B)
//  poke(dut.io.s1.asid,"h1".U)
//  step(1)
//  expect(dut.io.s0.found,true.B)
//  expect(dut.io.s0.index,0.U)
//  expect(dut.io.s0.pfn,"h022".U)
//  expect(dut.io.s0.c,3.U)
//  expect(dut.io.s0.d,1.U)
//  expect(dut.io.s0.v,1.U)
//  expect(dut.io.s1.found,false.B)
//
//
//  //s0:{'vpn2': '000', 'odd_page': '1', 'asid': '1', 'found': '0', 'index': 'x', 'pfn': 'xxx'}
//  //s1:{'vpn2': '111', 'odd_page': '1', 'asid': '0', 'found': '1', 'index': '1', 'pfn': '033'}
//  poke(dut.io.s0.vpn2,"h000".U)
//  poke(dut.io.s0.odd_page,true.B)
//  poke(dut.io.s0.asid,"h1".U)
//  poke(dut.io.s1.vpn2,"h111".U)
//  poke(dut.io.s1.odd_page,true.B)
//  poke(dut.io.s1.asid,"h0".U)
//  step(1)
//  expect(dut.io.s0.found,false.B)
//  expect(dut.io.s1.found,true.B)
//  expect(dut.io.s1.index,1.U)
//  expect(dut.io.s1.pfn,"h033".U)
//  expect(dut.io.s1.c,3.U)
//  expect(dut.io.s1.d,1.U)
//  expect(dut.io.s1.v,1.U)
//
//
//  //s0:{'vpn2': '111', 'odd_page': '1', 'asid': '0', 'found': '1', 'index': '1', 'pfn': '033'}
//  //s1:{'vpn2': '111', 'odd_page': '0', 'asid': '1', 'found': '1', 'index': '1', 'pfn': '222'}
//  poke(dut.io.s0.vpn2,"h111".U)
//  poke(dut.io.s0.odd_page,true.B)
//  poke(dut.io.s0.asid,"h0".U)
//  poke(dut.io.s1.vpn2,"h111".U)
//  poke(dut.io.s1.odd_page,false.B)
//  poke(dut.io.s1.asid,"h1".U)
//  step(1)
//  expect(dut.io.s0.found,true.B)
//  expect(dut.io.s0.index,1.U)
//  expect(dut.io.s0.pfn,"h033".U)
//  expect(dut.io.s0.c,3.U)
//  expect(dut.io.s0.d,1.U)
//  expect(dut.io.s0.v,1.U)
//  expect(dut.io.s1.found,true.B)
//  expect(dut.io.s1.index,1.U)
//  expect(dut.io.s1.pfn,"h222".U)
//  expect(dut.io.s1.c,3.U)
//  expect(dut.io.s1.d,1.U)
//  expect(dut.io.s1.v,1.U)
//
//
//  //s0:{'vpn2': '111', 'odd_page': '0', 'asid': '1', 'found': '1', 'index': '1', 'pfn': '222'}
//  //s1:{'vpn2': '222', 'odd_page': '0', 'asid': '0', 'found': '0', 'index': 'x', 'pfn': 'xxx'}
//  poke(dut.io.s0.vpn2,"h111".U)
//  poke(dut.io.s0.odd_page,false.B)
//  poke(dut.io.s0.asid,"h1".U)
//  poke(dut.io.s1.vpn2,"h222".U)
//  poke(dut.io.s1.odd_page,false.B)
//  poke(dut.io.s1.asid,"h0".U)
//  step(1)
//  expect(dut.io.s0.found,true.B)
//  expect(dut.io.s0.index,1.U)
//  expect(dut.io.s0.pfn,"h222".U)
//  expect(dut.io.s0.c,3.U)
//  expect(dut.io.s0.d,1.U)
//  expect(dut.io.s0.v,1.U)
//  expect(dut.io.s1.found,false.B)
//
//
//  //s0:{'vpn2': '222', 'odd_page': '0', 'asid': '0', 'found': '0', 'index': 'x', 'pfn': 'xxx'}
//  //s1:{'vpn2': '222', 'odd_page': '0', 'asid': '2', 'found': '1', 'index': '2', 'pfn': '333'}
//  poke(dut.io.s0.vpn2,"h222".U)
//  poke(dut.io.s0.odd_page,false.B)
//  poke(dut.io.s0.asid,"h0".U)
//  poke(dut.io.s1.vpn2,"h222".U)
//  poke(dut.io.s1.odd_page,false.B)
//  poke(dut.io.s1.asid,"h2".U)
//  step(1)
//  expect(dut.io.s0.found,false.B)
//  expect(dut.io.s1.found,true.B)
//  expect(dut.io.s1.index,2.U)
//  expect(dut.io.s1.pfn,"h333".U)
//  expect(dut.io.s1.c,3.U)
//  expect(dut.io.s1.d,1.U)
//  expect(dut.io.s1.v,1.U)
//
//
//  //s0:{'vpn2': '222', 'odd_page': '0', 'asid': '2', 'found': '1', 'index': '2', 'pfn': '333'}
//  //s1:{'vpn2': '333', 'odd_page': '0', 'asid': '3', 'found': '1', 'index': '3', 'pfn': '444'}
//  poke(dut.io.s0.vpn2,"h222".U)
//  poke(dut.io.s0.odd_page,false.B)
//  poke(dut.io.s0.asid,"h2".U)
//  poke(dut.io.s1.vpn2,"h333".U)
//  poke(dut.io.s1.odd_page,false.B)
//  poke(dut.io.s1.asid,"h3".U)
//  step(1)
//  expect(dut.io.s0.found,true.B)
//  expect(dut.io.s0.index,2.U)
//  expect(dut.io.s0.pfn,"h333".U)
//  expect(dut.io.s0.c,3.U)
//  expect(dut.io.s0.d,1.U)
//  expect(dut.io.s0.v,1.U)
//  expect(dut.io.s1.found,true.B)
//  expect(dut.io.s1.index,3.U)
//  expect(dut.io.s1.pfn,"h444".U)
//  expect(dut.io.s1.c,3.U)
//  expect(dut.io.s1.d,1.U)
//  expect(dut.io.s1.v,1.U)
//
//
//  //s0:{'vpn2': '333', 'odd_page': '0', 'asid': '3', 'found': '1', 'index': '3', 'pfn': '444'}
//  //s1:{'vpn2': '333', 'odd_page': '1', 'asid': '4', 'found': '1', 'index': '3', 'pfn': '055'}
//  poke(dut.io.s0.vpn2,"h333".U)
//  poke(dut.io.s0.odd_page,false.B)
//  poke(dut.io.s0.asid,"h3".U)
//  poke(dut.io.s1.vpn2,"h333".U)
//  poke(dut.io.s1.odd_page,true.B)
//  poke(dut.io.s1.asid,"h4".U)
//  step(1)
//  expect(dut.io.s0.found,true.B)
//  expect(dut.io.s0.index,3.U)
//  expect(dut.io.s0.pfn,"h444".U)
//  expect(dut.io.s0.c,3.U)
//  expect(dut.io.s0.d,1.U)
//  expect(dut.io.s0.v,1.U)
//  expect(dut.io.s1.found,true.B)
//  expect(dut.io.s1.index,3.U)
//  expect(dut.io.s1.pfn,"h055".U)
//  expect(dut.io.s1.c,3.U)
//  expect(dut.io.s1.d,1.U)
//  expect(dut.io.s1.v,1.U)
//
//
//  //s0:{'vpn2': '333', 'odd_page': '1', 'asid': '4', 'found': '1', 'index': '3', 'pfn': '055'}
//  //s1:{'vpn2': '444', 'odd_page': '0', 'asid': '4', 'found': '1', 'index': '4', 'pfn': '555'}
//  poke(dut.io.s0.vpn2,"h333".U)
//  poke(dut.io.s0.odd_page,true.B)
//  poke(dut.io.s0.asid,"h4".U)
//  poke(dut.io.s1.vpn2,"h444".U)
//  poke(dut.io.s1.odd_page,false.B)
//  poke(dut.io.s1.asid,"h4".U)
//  step(1)
//  expect(dut.io.s0.found,true.B)
//  expect(dut.io.s0.index,3.U)
//  expect(dut.io.s0.pfn,"h055".U)
//  expect(dut.io.s0.c,3.U)
//  expect(dut.io.s0.d,1.U)
//  expect(dut.io.s0.v,1.U)
//  expect(dut.io.s1.found,true.B)
//  expect(dut.io.s1.index,4.U)
//  expect(dut.io.s1.pfn,"h555".U)
//  expect(dut.io.s1.c,3.U)
//  expect(dut.io.s1.d,1.U)
//  expect(dut.io.s1.v,1.U)
//
//
//  //s0:{'vpn2': '444', 'odd_page': '0', 'asid': '4', 'found': '1', 'index': '4', 'pfn': '555'}
//  //s1:{'vpn2': '444', 'odd_page': '0', 'asid': '5', 'found': '1', 'index': '5', 'pfn': '666'}
//  poke(dut.io.s0.vpn2,"h444".U)
//  poke(dut.io.s0.odd_page,false.B)
//  poke(dut.io.s0.asid,"h4".U)
//  poke(dut.io.s1.vpn2,"h444".U)
//  poke(dut.io.s1.odd_page,false.B)
//  poke(dut.io.s1.asid,"h5".U)
//  step(1)
//  expect(dut.io.s0.found,true.B)
//  expect(dut.io.s0.index,4.U)
//  expect(dut.io.s0.pfn,"h555".U)
//  expect(dut.io.s0.c,3.U)
//  expect(dut.io.s0.d,1.U)
//  expect(dut.io.s0.v,1.U)
//  expect(dut.io.s1.found,true.B)
//  expect(dut.io.s1.index,5.U)
//  expect(dut.io.s1.pfn,"h666".U)
//  expect(dut.io.s1.c,3.U)
//  expect(dut.io.s1.d,1.U)
//  expect(dut.io.s1.v,1.U)
//
//
//  //s0:{'vpn2': '444', 'odd_page': '0', 'asid': '5', 'found': '1', 'index': '5', 'pfn': '666'}
//  //s1:{'vpn2': '555', 'odd_page': '1', 'asid': '5', 'found': '0', 'index': 'x', 'pfn': 'xxx'}
//  poke(dut.io.s0.vpn2,"h444".U)
//  poke(dut.io.s0.odd_page,false.B)
//  poke(dut.io.s0.asid,"h5".U)
//  poke(dut.io.s1.vpn2,"h555".U)
//  poke(dut.io.s1.odd_page,true.B)
//  poke(dut.io.s1.asid,"h5".U)
//  step(1)
//  expect(dut.io.s0.found,true.B)
//  expect(dut.io.s0.index,5.U)
//  expect(dut.io.s0.pfn,"h666".U)
//  expect(dut.io.s0.c,3.U)
//  expect(dut.io.s0.d,1.U)
//  expect(dut.io.s0.v,1.U)
//  expect(dut.io.s1.found,false.B)
//
//
//  //s0:{'vpn2': '555', 'odd_page': '1', 'asid': '5', 'found': '0', 'index': 'x', 'pfn': 'xxx'}
//  //s1:{'vpn2': '666', 'odd_page': '0', 'asid': '6', 'found': '1', 'index': '6', 'pfn': '777'}
//  poke(dut.io.s0.vpn2,"h555".U)
//  poke(dut.io.s0.odd_page,true.B)
//  poke(dut.io.s0.asid,"h5".U)
//  poke(dut.io.s1.vpn2,"h666".U)
//  poke(dut.io.s1.odd_page,false.B)
//  poke(dut.io.s1.asid,"h6".U)
//  step(1)
//  expect(dut.io.s0.found,false.B)
//  expect(dut.io.s1.found,true.B)
//  expect(dut.io.s1.index,6.U)
//  expect(dut.io.s1.pfn,"h777".U)
//  expect(dut.io.s1.c,3.U)
//  expect(dut.io.s1.d,1.U)
//  expect(dut.io.s1.v,1.U)
//
//
//  //s0:{'vpn2': '666', 'odd_page': '0', 'asid': '6', 'found': '1', 'index': '6', 'pfn': '777'}
//  //s1:{'vpn2': '666', 'odd_page': '1', 'asid': '7', 'found': '1', 'index': '7', 'pfn': '099'}
//  poke(dut.io.s0.vpn2,"h666".U)
//  poke(dut.io.s0.odd_page,false.B)
//  poke(dut.io.s0.asid,"h6".U)
//  poke(dut.io.s1.vpn2,"h666".U)
//  poke(dut.io.s1.odd_page,true.B)
//  poke(dut.io.s1.asid,"h7".U)
//  step(1)
//  expect(dut.io.s0.found,true.B)
//  expect(dut.io.s0.index,6.U)
//  expect(dut.io.s0.pfn,"h777".U)
//  expect(dut.io.s0.c,3.U)
//  expect(dut.io.s0.d,1.U)
//  expect(dut.io.s0.v,1.U)
//  expect(dut.io.s1.found,true.B)
//  expect(dut.io.s1.index,7.U)
//  expect(dut.io.s1.pfn,"h099".U)
//  expect(dut.io.s1.c,3.U)
//  expect(dut.io.s1.d,1.U)
//  expect(dut.io.s1.v,1.U)
//
//
//  //s0:{'vpn2': '666', 'odd_page': '1', 'asid': '7', 'found': '1', 'index': '7', 'pfn': '099'}
//  //s1:{'vpn2': '666', 'odd_page': '1', 'asid': '8', 'found': '0', 'index': 'x', 'pfn': 'xxx'}
//  poke(dut.io.s0.vpn2,"h666".U)
//  poke(dut.io.s0.odd_page,true.B)
//  poke(dut.io.s0.asid,"h7".U)
//  poke(dut.io.s1.vpn2,"h666".U)
//  poke(dut.io.s1.odd_page,true.B)
//  poke(dut.io.s1.asid,"h8".U)
//  step(1)
//  expect(dut.io.s0.found,true.B)
//  expect(dut.io.s0.index,7.U)
//  expect(dut.io.s0.pfn,"h099".U)
//  expect(dut.io.s0.c,3.U)
//  expect(dut.io.s0.d,1.U)
//  expect(dut.io.s0.v,1.U)
//  expect(dut.io.s1.found,false.B)
//
//
//  //s0:{'vpn2': '666', 'odd_page': '1', 'asid': '8', 'found': '0', 'index': 'x', 'pfn': 'xxx'}
//  //s1:{'vpn2': '777', 'odd_page': '0', 'asid': '7', 'found': '0', 'index': 'x', 'pfn': 'xxx'}
//  poke(dut.io.s0.vpn2,"h666".U)
//  poke(dut.io.s0.odd_page,true.B)
//  poke(dut.io.s0.asid,"h8".U)
//  poke(dut.io.s1.vpn2,"h777".U)
//  poke(dut.io.s1.odd_page,false.B)
//  poke(dut.io.s1.asid,"h7".U)
//  step(1)
//  expect(dut.io.s0.found,false.B)
//  expect(dut.io.s1.found,false.B)
//
//
//  //s0:{'vpn2': '777', 'odd_page': '0', 'asid': '7', 'found': '0', 'index': 'x', 'pfn': 'xxx'}
//  //s1:{'vpn2': '888', 'odd_page': '0', 'asid': '8', 'found': '1', 'index': '8', 'pfn': '999'}
//  poke(dut.io.s0.vpn2,"h777".U)
//  poke(dut.io.s0.odd_page,false.B)
//  poke(dut.io.s0.asid,"h7".U)
//  poke(dut.io.s1.vpn2,"h888".U)
//  poke(dut.io.s1.odd_page,false.B)
//  poke(dut.io.s1.asid,"h8".U)
//  step(1)
//  expect(dut.io.s0.found,false.B)
//  expect(dut.io.s1.found,true.B)
//  expect(dut.io.s1.index,8.U)
//  expect(dut.io.s1.pfn,"h999".U)
//  expect(dut.io.s1.c,3.U)
//  expect(dut.io.s1.d,1.U)
//  expect(dut.io.s1.v,1.U)
//
//
//  //s0:{'vpn2': '888', 'odd_page': '0', 'asid': '8', 'found': '1', 'index': '8', 'pfn': '999'}
//  //s1:{'vpn2': '999', 'odd_page': '1', 'asid': '9', 'found': '1', 'index': '9', 'pfn': '0bb'}
//  poke(dut.io.s0.vpn2,"h888".U)
//  poke(dut.io.s0.odd_page,false.B)
//  poke(dut.io.s0.asid,"h8".U)
//  poke(dut.io.s1.vpn2,"h999".U)
//  poke(dut.io.s1.odd_page,true.B)
//  poke(dut.io.s1.asid,"h9".U)
//  step(1)
//  expect(dut.io.s0.found,true.B)
//  expect(dut.io.s0.index,8.U)
//  expect(dut.io.s0.pfn,"h999".U)
//  expect(dut.io.s0.c,3.U)
//  expect(dut.io.s0.d,1.U)
//  expect(dut.io.s0.v,1.U)
//  expect(dut.io.s1.found,true.B)
//  expect(dut.io.s1.index,9.U)
//  expect(dut.io.s1.pfn,"h0bb".U)
//  expect(dut.io.s1.c,3.U)
//  expect(dut.io.s1.d,1.U)
//  expect(dut.io.s1.v,1.U)
//
//
//  //s0:{'vpn2': '999', 'odd_page': '1', 'asid': '9', 'found': '1', 'index': '9', 'pfn': '0bb'}
//  //s1:{'vpn2': 'aaa', 'odd_page': '0', 'asid': 'a', 'found': '1', 'index': '10', 'pfn': 'bbb'}
//  poke(dut.io.s0.vpn2,"h999".U)
//  poke(dut.io.s0.odd_page,true.B)
//  poke(dut.io.s0.asid,"h9".U)
//  poke(dut.io.s1.vpn2,"haaa".U)
//  poke(dut.io.s1.odd_page,false.B)
//  poke(dut.io.s1.asid,"ha".U)
//  step(1)
//  expect(dut.io.s0.found,true.B)
//  expect(dut.io.s0.index,9.U)
//  expect(dut.io.s0.pfn,"h0bb".U)
//  expect(dut.io.s0.c,3.U)
//  expect(dut.io.s0.d,1.U)
//  expect(dut.io.s0.v,1.U)
//  expect(dut.io.s1.found,true.B)
//  expect(dut.io.s1.index,10.U)
//  expect(dut.io.s1.pfn,"hbbb".U)
//  expect(dut.io.s1.c,3.U)
//  expect(dut.io.s1.d,1.U)
//  expect(dut.io.s1.v,1.U)
//
//
//  //s0:{'vpn2': 'aaa', 'odd_page': '0', 'asid': 'a', 'found': '1', 'index': '10', 'pfn': 'bbb'}
//  //s1:{'vpn2': 'bbb', 'odd_page': '1', 'asid': 'b', 'found': '1', 'index': '11', 'pfn': '0dd'}
//  poke(dut.io.s0.vpn2,"haaa".U)
//  poke(dut.io.s0.odd_page,false.B)
//  poke(dut.io.s0.asid,"ha".U)
//  poke(dut.io.s1.vpn2,"hbbb".U)
//  poke(dut.io.s1.odd_page,true.B)
//  poke(dut.io.s1.asid,"hb".U)
//  step(1)
//  expect(dut.io.s0.found,true.B)
//  expect(dut.io.s0.index,10.U)
//  expect(dut.io.s0.pfn,"hbbb".U)
//  expect(dut.io.s0.c,3.U)
//  expect(dut.io.s0.d,1.U)
//  expect(dut.io.s0.v,1.U)
//  expect(dut.io.s1.found,true.B)
//  expect(dut.io.s1.index,11.U)
//  expect(dut.io.s1.pfn,"h0dd".U)
//  expect(dut.io.s1.c,3.U)
//  expect(dut.io.s1.d,1.U)
//  expect(dut.io.s1.v,1.U)
//
//
//  //s0:{'vpn2': 'bbb', 'odd_page': '1', 'asid': 'b', 'found': '1', 'index': '11', 'pfn': '0dd'}
//  //s1:{'vpn2': 'ccc', 'odd_page': '0', 'asid': 'c', 'found': '1', 'index': '12', 'pfn': 'ddd'}
//  poke(dut.io.s0.vpn2,"hbbb".U)
//  poke(dut.io.s0.odd_page,true.B)
//  poke(dut.io.s0.asid,"hb".U)
//  poke(dut.io.s1.vpn2,"hccc".U)
//  poke(dut.io.s1.odd_page,false.B)
//  poke(dut.io.s1.asid,"hc".U)
//  step(1)
//  expect(dut.io.s0.found,true.B)
//  expect(dut.io.s0.index,11.U)
//  expect(dut.io.s0.pfn,"h0dd".U)
//  expect(dut.io.s0.c,3.U)
//  expect(dut.io.s0.d,1.U)
//  expect(dut.io.s0.v,1.U)
//  expect(dut.io.s1.found,true.B)
//  expect(dut.io.s1.index,12.U)
//  expect(dut.io.s1.pfn,"hddd".U)
//  expect(dut.io.s1.c,3.U)
//  expect(dut.io.s1.d,1.U)
//  expect(dut.io.s1.v,1.U)
//
//
//  //s0:{'vpn2': 'ccc', 'odd_page': '0', 'asid': 'c', 'found': '1', 'index': '12', 'pfn': 'ddd'}
//  //s1:{'vpn2': 'ddd', 'odd_page': '1', 'asid': 'd', 'found': '1', 'index': '13', 'pfn': '0ff'}
//  poke(dut.io.s0.vpn2,"hccc".U)
//  poke(dut.io.s0.odd_page,false.B)
//  poke(dut.io.s0.asid,"hc".U)
//  poke(dut.io.s1.vpn2,"hddd".U)
//  poke(dut.io.s1.odd_page,true.B)
//  poke(dut.io.s1.asid,"hd".U)
//  step(1)
//  expect(dut.io.s0.found,true.B)
//  expect(dut.io.s0.index,12.U)
//  expect(dut.io.s0.pfn,"hddd".U)
//  expect(dut.io.s0.c,3.U)
//  expect(dut.io.s0.d,1.U)
//  expect(dut.io.s0.v,1.U)
//  expect(dut.io.s1.found,true.B)
//  expect(dut.io.s1.index,13.U)
//  expect(dut.io.s1.pfn,"h0ff".U)
//  expect(dut.io.s1.c,3.U)
//  expect(dut.io.s1.d,1.U)
//  expect(dut.io.s1.v,1.U)
//
//
//  //s0:{'vpn2': 'ddd', 'odd_page': '1', 'asid': 'd', 'found': '1', 'index': '13', 'pfn': '0ff'}
//  //s1:{'vpn2': 'eee', 'odd_page': '0', 'asid': 'e', 'found': '1', 'index': '14', 'pfn': 'fff'}
//  poke(dut.io.s0.vpn2,"hddd".U)
//  poke(dut.io.s0.odd_page,true.B)
//  poke(dut.io.s0.asid,"hd".U)
//  poke(dut.io.s1.vpn2,"heee".U)
//  poke(dut.io.s1.odd_page,false.B)
//  poke(dut.io.s1.asid,"he".U)
//  step(1)
//  expect(dut.io.s0.found,true.B)
//  expect(dut.io.s0.index,13.U)
//  expect(dut.io.s0.pfn,"h0ff".U)
//  expect(dut.io.s0.c,3.U)
//  expect(dut.io.s0.d,1.U)
//  expect(dut.io.s0.v,1.U)
//  expect(dut.io.s1.found,true.B)
//  expect(dut.io.s1.index,14.U)
//  expect(dut.io.s1.pfn,"hfff".U)
//  expect(dut.io.s1.c,3.U)
//  expect(dut.io.s1.d,1.U)
//  expect(dut.io.s1.v,1.U)
//
//
//  //s0:{'vpn2': 'eee', 'odd_page': '0', 'asid': 'e', 'found': '1', 'index': '14', 'pfn': 'fff'}
//  //s1:{'vpn2': 'fff', 'odd_page': '1', 'asid': 'f', 'found': '1', 'index': '15', 'pfn': '011'}
//  poke(dut.io.s0.vpn2,"heee".U)
//  poke(dut.io.s0.odd_page,false.B)
//  poke(dut.io.s0.asid,"he".U)
//  poke(dut.io.s1.vpn2,"hfff".U)
//  poke(dut.io.s1.odd_page,true.B)
//  poke(dut.io.s1.asid,"hf".U)
//  step(1)
//  expect(dut.io.s0.found,true.B)
//  expect(dut.io.s0.index,14.U)
//  expect(dut.io.s0.pfn,"hfff".U)
//  expect(dut.io.s0.c,3.U)
//  expect(dut.io.s0.d,1.U)
//  expect(dut.io.s0.v,1.U)
//  expect(dut.io.s1.found,true.B)
//  expect(dut.io.s1.index,15.U)
//  expect(dut.io.s1.pfn,"h011".U)
//  expect(dut.io.s1.c,3.U)
//  expect(dut.io.s1.d,1.U)
//  expect(dut.io.s1.v,1.U)
//
//
//  //s0:{'vpn2': 'fff', 'odd_page': '1', 'asid': 'f', 'found': '1', 'index': '15', 'pfn': '011'}
//  //s1:{'vpn2': 'abc', 'odd_page': '0', 'asid': 'f', 'found': '0', 'index': 'x', 'pfn': 'xxx'}
//  poke(dut.io.s0.vpn2,"hfff".U)
//  poke(dut.io.s0.odd_page,true.B)
//  poke(dut.io.s0.asid,"hf".U)
//  poke(dut.io.s1.vpn2,"habc".U)
//  poke(dut.io.s1.odd_page,false.B)
//  poke(dut.io.s1.asid,"hf".U)
//  step(1)
//  expect(dut.io.s0.found,true.B)
//  expect(dut.io.s0.index,15.U)
//  expect(dut.io.s0.pfn,"h011".U)
//  expect(dut.io.s0.c,3.U)
//  expect(dut.io.s0.d,1.U)
//  expect(dut.io.s0.v,1.U)
//  expect(dut.io.s1.found,false.B)
//
//
//  //s0:{'vpn2': 'abc', 'odd_page': '0', 'asid': 'f', 'found': '0', 'index': 'x', 'pfn': 'xxx'}
//  //s1:{'vpn2': '123', 'odd_page': '1', 'asid': '3', 'found': '0', 'index': 'x', 'pfn': 'xxx'}
//  poke(dut.io.s0.vpn2,"habc".U)
//  poke(dut.io.s0.odd_page,false.B)
//  poke(dut.io.s0.asid,"hf".U)
//  poke(dut.io.s1.vpn2,"h123".U)
//  poke(dut.io.s1.odd_page,true.B)
//  poke(dut.io.s1.asid,"h3".U)
//  step(1)
//  expect(dut.io.s0.found,false.B)
//  expect(dut.io.s1.found,false.B)
//
//
//  //s0:{'vpn2': '123', 'odd_page': '1', 'asid': '3', 'found': '0', 'index': 'x', 'pfn': 'xxx'}
//  //s1:{'vpn2': '000', 'odd_page': '0', 'asid': '0', 'found': '1', 'index': '0', 'pfn': '111'}
//  poke(dut.io.s0.vpn2,"h123".U)
//  poke(dut.io.s0.odd_page,true.B)
//  poke(dut.io.s0.asid,"h3".U)
//  poke(dut.io.s1.vpn2,"h000".U)
//  poke(dut.io.s1.odd_page,false.B)
//  poke(dut.io.s1.asid,"h0".U)
//  step(1)
//  expect(dut.io.s0.found,false.B)
//  expect(dut.io.s1.found,true.B)
//  expect(dut.io.s1.index,0.U)
//  expect(dut.io.s1.pfn,"h111".U)
//  expect(dut.io.s1.c,3.U)
//  expect(dut.io.s1.d,1.U)
//  expect(dut.io.s1.v,1.U)
//
//
//  // 测试valid
//  //s0:{'vpn2': 'fff', 'odd_page': '1', 'asid': 'f', 'found': '1', 'index': '15', 'pfn': '011'}
//  poke(dut.io.we,true.B)
//  poke(dut.io.w_index,15.U)
//  poke(dut.io.w_vpn2,"hfff".U(19.W))
//  poke(dut.io.w_asid,"hf".U(19.W))
//  poke(dut.io.w_g,false.B)
//  poke(dut.io.w_pfn0,"h000".U(19.W))
//  poke(dut.io.w_pfn1,"h011".U(19.W))
//  poke(dut.io.w_c0,3.U(3.W))
//  poke(dut.io.w_d0,true.B)
//  poke(dut.io.w_v0,true.B)
//  poke(dut.io.w_c1,3.U(3.W))
//  poke(dut.io.w_d1,true.B)
//  poke(dut.io.w_v1,false.B)// 改成false
//  poke(dut.io.r_index,15.U)
//  step(1)
//  poke(dut.io.s0.vpn2,"hfff".U)
//  poke(dut.io.s0.odd_page,true.B)
//  poke(dut.io.s0.asid,"hf".U)
//  step(1)
//  expect(dut.io.s0.found,false.B)
//
//
//
//
//  def myinit(dut:tlb):Unit={
//
//    // 写第0项
//    poke(dut.io.we,true.B)
//    poke(dut.io.w_index,0)
//    poke(dut.io.w_vpn2,"h000".U(19.W))
//    poke(dut.io.w_asid,"h0".U(19.W))
//    poke(dut.io.w_g,false.B)
//    poke(dut.io.w_pfn0,"h111".U(19.W))
//    poke(dut.io.w_pfn1,"h022".U(19.W))
//    poke(dut.io.w_c0,3.U(3.W))
//    poke(dut.io.w_d0,true.B)
//    poke(dut.io.w_v0,true.B)
//    poke(dut.io.w_c1,3.U(3.W))
//    poke(dut.io.w_d1,true.B)
//    poke(dut.io.w_v1,true.B)
//    poke(dut.io.r_index,0)
//    step(1)
//    //验证第0项
//    poke(dut.io.we,false.B)
//    expect(dut.io.r_vpn2,"h000".U(19.W))
//    expect(dut.io.r_asid,"h0".U(19.W))
//    expect(dut.io.r_g,false.B)
//    expect(dut.io.r_pfn0,"h111".U(19.W))
//    expect(dut.io.r_pfn1,"h022".U(19.W))
//    expect(dut.io.r_c0,3.U(3.W))
//    expect(dut.io.r_d0,true.B)
//    expect(dut.io.r_v0,true.B)
//    expect(dut.io.r_c1,3.U(3.W))
//    expect(dut.io.r_d1,true.B)
//    expect(dut.io.r_v1,true.B)
//
//
//    // 写第1项
//    poke(dut.io.we,true.B)
//    poke(dut.io.w_index,1)
//    poke(dut.io.w_vpn2,"h111".U(19.W))
//    poke(dut.io.w_asid,"h1".U(19.W))
//    poke(dut.io.w_g,true.B)
//    poke(dut.io.w_pfn0,"h222".U(19.W))
//    poke(dut.io.w_pfn1,"h033".U(19.W))
//    poke(dut.io.w_c0,3.U(3.W))
//    poke(dut.io.w_d0,true.B)
//    poke(dut.io.w_v0,true.B)
//    poke(dut.io.w_c1,3.U(3.W))
//    poke(dut.io.w_d1,true.B)
//    poke(dut.io.w_v1,true.B)
//    poke(dut.io.r_index,1)
//    step(1)
//    //验证第1项
//    poke(dut.io.we,false.B)
//    expect(dut.io.r_vpn2,"h111".U(19.W))
//    expect(dut.io.r_asid,"h1".U(19.W))
//    expect(dut.io.r_g,true.B)
//    expect(dut.io.r_pfn0,"h222".U(19.W))
//    expect(dut.io.r_pfn1,"h033".U(19.W))
//    expect(dut.io.r_c0,3.U(3.W))
//    expect(dut.io.r_d0,true.B)
//    expect(dut.io.r_v0,true.B)
//    expect(dut.io.r_c1,3.U(3.W))
//    expect(dut.io.r_d1,true.B)
//    expect(dut.io.r_v1,true.B)
//
//
//    // 写第2项
//    poke(dut.io.we,true.B)
//    poke(dut.io.w_index,2)
//    poke(dut.io.w_vpn2,"h222".U(19.W))
//    poke(dut.io.w_asid,"h2".U(19.W))
//    poke(dut.io.w_g,false.B)
//    poke(dut.io.w_pfn0,"h333".U(19.W))
//    poke(dut.io.w_pfn1,"h044".U(19.W))
//    poke(dut.io.w_c0,3.U(3.W))
//    poke(dut.io.w_d0,true.B)
//    poke(dut.io.w_v0,true.B)
//    poke(dut.io.w_c1,3.U(3.W))
//    poke(dut.io.w_d1,true.B)
//    poke(dut.io.w_v1,true.B)
//    poke(dut.io.r_index,2)
//    step(1)
//    //验证第2项
//    poke(dut.io.we,false.B)
//    expect(dut.io.r_vpn2,"h222".U(19.W))
//    expect(dut.io.r_asid,"h2".U(19.W))
//    expect(dut.io.r_g,false.B)
//    expect(dut.io.r_pfn0,"h333".U(19.W))
//    expect(dut.io.r_pfn1,"h044".U(19.W))
//    expect(dut.io.r_c0,3.U(3.W))
//    expect(dut.io.r_d0,true.B)
//    expect(dut.io.r_v0,true.B)
//    expect(dut.io.r_c1,3.U(3.W))
//    expect(dut.io.r_d1,true.B)
//    expect(dut.io.r_v1,true.B)
//
//
//    // 写第3项
//    poke(dut.io.we,true.B)
//    poke(dut.io.w_index,3)
//    poke(dut.io.w_vpn2,"h333".U(19.W))
//    poke(dut.io.w_asid,"h3".U(19.W))
//    poke(dut.io.w_g,true.B)
//    poke(dut.io.w_pfn0,"h444".U(19.W))
//    poke(dut.io.w_pfn1,"h055".U(19.W))
//    poke(dut.io.w_c0,3.U(3.W))
//    poke(dut.io.w_d0,true.B)
//    poke(dut.io.w_v0,true.B)
//    poke(dut.io.w_c1,3.U(3.W))
//    poke(dut.io.w_d1,true.B)
//    poke(dut.io.w_v1,true.B)
//    poke(dut.io.r_index,3)
//    step(1)
//    //验证第3项
//    poke(dut.io.we,false.B)
//    expect(dut.io.r_vpn2,"h333".U(19.W))
//    expect(dut.io.r_asid,"h3".U(19.W))
//    expect(dut.io.r_g,true.B)
//    expect(dut.io.r_pfn0,"h444".U(19.W))
//    expect(dut.io.r_pfn1,"h055".U(19.W))
//    expect(dut.io.r_c0,3.U(3.W))
//    expect(dut.io.r_d0,true.B)
//    expect(dut.io.r_v0,true.B)
//    expect(dut.io.r_c1,3.U(3.W))
//    expect(dut.io.r_d1,true.B)
//    expect(dut.io.r_v1,true.B)
//
//
//    // 写第4项
//    poke(dut.io.we,true.B)
//    poke(dut.io.w_index,4)
//    poke(dut.io.w_vpn2,"h444".U(19.W))
//    poke(dut.io.w_asid,"h4".U(19.W))
//    poke(dut.io.w_g,false.B)
//    poke(dut.io.w_pfn0,"h555".U(19.W))
//    poke(dut.io.w_pfn1,"h066".U(19.W))
//    poke(dut.io.w_c0,3.U(3.W))
//    poke(dut.io.w_d0,true.B)
//    poke(dut.io.w_v0,true.B)
//    poke(dut.io.w_c1,3.U(3.W))
//    poke(dut.io.w_d1,true.B)
//    poke(dut.io.w_v1,true.B)
//    poke(dut.io.r_index,4)
//    step(1)
//    //验证第4项
//    poke(dut.io.we,false.B)
//    expect(dut.io.r_vpn2,"h444".U(19.W))
//    expect(dut.io.r_asid,"h4".U(19.W))
//    expect(dut.io.r_g,false.B)
//    expect(dut.io.r_pfn0,"h555".U(19.W))
//    expect(dut.io.r_pfn1,"h066".U(19.W))
//    expect(dut.io.r_c0,3.U(3.W))
//    expect(dut.io.r_d0,true.B)
//    expect(dut.io.r_v0,true.B)
//    expect(dut.io.r_c1,3.U(3.W))
//    expect(dut.io.r_d1,true.B)
//    expect(dut.io.r_v1,true.B)
//
//
//    // 写第5项
//    poke(dut.io.we,true.B)
//    poke(dut.io.w_index,5)
//    poke(dut.io.w_vpn2,"h444".U(19.W))
//    poke(dut.io.w_asid,"h5".U(19.W))
//    poke(dut.io.w_g,false.B)
//    poke(dut.io.w_pfn0,"h666".U(19.W))
//    poke(dut.io.w_pfn1,"h077".U(19.W))
//    poke(dut.io.w_c0,3.U(3.W))
//    poke(dut.io.w_d0,true.B)
//    poke(dut.io.w_v0,true.B)
//    poke(dut.io.w_c1,3.U(3.W))
//    poke(dut.io.w_d1,true.B)
//    poke(dut.io.w_v1,true.B)
//    poke(dut.io.r_index,5)
//    step(1)
//    //验证第5项
//    poke(dut.io.we,false.B)
//    expect(dut.io.r_vpn2,"h444".U(19.W))
//    expect(dut.io.r_asid,"h5".U(19.W))
//    expect(dut.io.r_g,false.B)
//    expect(dut.io.r_pfn0,"h666".U(19.W))
//    expect(dut.io.r_pfn1,"h077".U(19.W))
//    expect(dut.io.r_c0,3.U(3.W))
//    expect(dut.io.r_d0,true.B)
//    expect(dut.io.r_v0,true.B)
//    expect(dut.io.r_c1,3.U(3.W))
//    expect(dut.io.r_d1,true.B)
//    expect(dut.io.r_v1,true.B)
//
//
//    // 写第6项
//    poke(dut.io.we,true.B)
//    poke(dut.io.w_index,6)
//    poke(dut.io.w_vpn2,"h666".U(19.W))
//    poke(dut.io.w_asid,"h6".U(19.W))
//    poke(dut.io.w_g,false.B)
//    poke(dut.io.w_pfn0,"h777".U(19.W))
//    poke(dut.io.w_pfn1,"h088".U(19.W))
//    poke(dut.io.w_c0,3.U(3.W))
//    poke(dut.io.w_d0,true.B)
//    poke(dut.io.w_v0,true.B)
//    poke(dut.io.w_c1,3.U(3.W))
//    poke(dut.io.w_d1,true.B)
//    poke(dut.io.w_v1,true.B)
//    poke(dut.io.r_index,6)
//    step(1)
//    //验证第6项
//    poke(dut.io.we,false.B)
//    expect(dut.io.r_vpn2,"h666".U(19.W))
//    expect(dut.io.r_asid,"h6".U(19.W))
//    expect(dut.io.r_g,false.B)
//    expect(dut.io.r_pfn0,"h777".U(19.W))
//    expect(dut.io.r_pfn1,"h088".U(19.W))
//    expect(dut.io.r_c0,3.U(3.W))
//    expect(dut.io.r_d0,true.B)
//    expect(dut.io.r_v0,true.B)
//    expect(dut.io.r_c1,3.U(3.W))
//    expect(dut.io.r_d1,true.B)
//    expect(dut.io.r_v1,true.B)
//
//
//    // 写第7项
//    poke(dut.io.we,true.B)
//    poke(dut.io.w_index,7)
//    poke(dut.io.w_vpn2,"h666".U(19.W))
//    poke(dut.io.w_asid,"h7".U(19.W))
//    poke(dut.io.w_g,false.B)
//    poke(dut.io.w_pfn0,"h888".U(19.W))
//    poke(dut.io.w_pfn1,"h099".U(19.W))
//    poke(dut.io.w_c0,3.U(3.W))
//    poke(dut.io.w_d0,true.B)
//    poke(dut.io.w_v0,true.B)
//    poke(dut.io.w_c1,3.U(3.W))
//    poke(dut.io.w_d1,true.B)
//    poke(dut.io.w_v1,true.B)
//    poke(dut.io.r_index,7)
//    step(1)
//    //验证第7项
//    poke(dut.io.we,false.B)
//    expect(dut.io.r_vpn2,"h666".U(19.W))
//    expect(dut.io.r_asid,"h7".U(19.W))
//    expect(dut.io.r_g,false.B)
//    expect(dut.io.r_pfn0,"h888".U(19.W))
//    expect(dut.io.r_pfn1,"h099".U(19.W))
//    expect(dut.io.r_c0,3.U(3.W))
//    expect(dut.io.r_d0,true.B)
//    expect(dut.io.r_v0,true.B)
//    expect(dut.io.r_c1,3.U(3.W))
//    expect(dut.io.r_d1,true.B)
//    expect(dut.io.r_v1,true.B)
//
//
//    // 写第8项
//    poke(dut.io.we,true.B)
//    poke(dut.io.w_index,8)
//    poke(dut.io.w_vpn2,"h888".U(19.W))
//    poke(dut.io.w_asid,"h8".U(19.W))
//    poke(dut.io.w_g,false.B)
//    poke(dut.io.w_pfn0,"h999".U(19.W))
//    poke(dut.io.w_pfn1,"h0aa".U(19.W))
//    poke(dut.io.w_c0,3.U(3.W))
//    poke(dut.io.w_d0,true.B)
//    poke(dut.io.w_v0,true.B)
//    poke(dut.io.w_c1,3.U(3.W))
//    poke(dut.io.w_d1,true.B)
//    poke(dut.io.w_v1,true.B)
//    poke(dut.io.r_index,8)
//    step(1)
//    //验证第8项
//    poke(dut.io.we,false.B)
//    expect(dut.io.r_vpn2,"h888".U(19.W))
//    expect(dut.io.r_asid,"h8".U(19.W))
//    expect(dut.io.r_g,false.B)
//    expect(dut.io.r_pfn0,"h999".U(19.W))
//    expect(dut.io.r_pfn1,"h0aa".U(19.W))
//    expect(dut.io.r_c0,3.U(3.W))
//    expect(dut.io.r_d0,true.B)
//    expect(dut.io.r_v0,true.B)
//    expect(dut.io.r_c1,3.U(3.W))
//    expect(dut.io.r_d1,true.B)
//    expect(dut.io.r_v1,true.B)
//
//
//    // 写第9项
//    poke(dut.io.we,true.B)
//    poke(dut.io.w_index,9)
//    poke(dut.io.w_vpn2,"h999".U(19.W))
//    poke(dut.io.w_asid,"h9".U(19.W))
//    poke(dut.io.w_g,false.B)
//    poke(dut.io.w_pfn0,"haaa".U(19.W))
//    poke(dut.io.w_pfn1,"h0bb".U(19.W))
//    poke(dut.io.w_c0,3.U(3.W))
//    poke(dut.io.w_d0,true.B)
//    poke(dut.io.w_v0,true.B)
//    poke(dut.io.w_c1,3.U(3.W))
//    poke(dut.io.w_d1,true.B)
//    poke(dut.io.w_v1,true.B)
//    poke(dut.io.r_index,9)
//    step(1)
//    //验证第9项
//    poke(dut.io.we,false.B)
//    expect(dut.io.r_vpn2,"h999".U(19.W))
//    expect(dut.io.r_asid,"h9".U(19.W))
//    expect(dut.io.r_g,false.B)
//    expect(dut.io.r_pfn0,"haaa".U(19.W))
//    expect(dut.io.r_pfn1,"h0bb".U(19.W))
//    expect(dut.io.r_c0,3.U(3.W))
//    expect(dut.io.r_d0,true.B)
//    expect(dut.io.r_v0,true.B)
//    expect(dut.io.r_c1,3.U(3.W))
//    expect(dut.io.r_d1,true.B)
//    expect(dut.io.r_v1,true.B)
//
//
//    // 写第10项
//    poke(dut.io.we,true.B)
//    poke(dut.io.w_index,10)
//    poke(dut.io.w_vpn2,"haaa".U(19.W))
//    poke(dut.io.w_asid,"ha".U(19.W))
//    poke(dut.io.w_g,false.B)
//    poke(dut.io.w_pfn0,"hbbb".U(19.W))
//    poke(dut.io.w_pfn1,"h0cc".U(19.W))
//    poke(dut.io.w_c0,3.U(3.W))
//    poke(dut.io.w_d0,true.B)
//    poke(dut.io.w_v0,true.B)
//    poke(dut.io.w_c1,3.U(3.W))
//    poke(dut.io.w_d1,true.B)
//    poke(dut.io.w_v1,true.B)
//    poke(dut.io.r_index,10)
//    step(1)
//    //验证第10项
//    poke(dut.io.we,false.B)
//    expect(dut.io.r_vpn2,"haaa".U(19.W))
//    expect(dut.io.r_asid,"ha".U(19.W))
//    expect(dut.io.r_g,false.B)
//    expect(dut.io.r_pfn0,"hbbb".U(19.W))
//    expect(dut.io.r_pfn1,"h0cc".U(19.W))
//    expect(dut.io.r_c0,3.U(3.W))
//    expect(dut.io.r_d0,true.B)
//    expect(dut.io.r_v0,true.B)
//    expect(dut.io.r_c1,3.U(3.W))
//    expect(dut.io.r_d1,true.B)
//    expect(dut.io.r_v1,true.B)
//
//
//    // 写第11项
//    poke(dut.io.we,true.B)
//    poke(dut.io.w_index,11)
//    poke(dut.io.w_vpn2,"hbbb".U(19.W))
//    poke(dut.io.w_asid,"hb".U(19.W))
//    poke(dut.io.w_g,false.B)
//    poke(dut.io.w_pfn0,"hccc".U(19.W))
//    poke(dut.io.w_pfn1,"h0dd".U(19.W))
//    poke(dut.io.w_c0,3.U(3.W))
//    poke(dut.io.w_d0,true.B)
//    poke(dut.io.w_v0,true.B)
//    poke(dut.io.w_c1,3.U(3.W))
//    poke(dut.io.w_d1,true.B)
//    poke(dut.io.w_v1,true.B)
//    poke(dut.io.r_index,11)
//    step(1)
//    //验证第11项
//    poke(dut.io.we,false.B)
//    expect(dut.io.r_vpn2,"hbbb".U(19.W))
//    expect(dut.io.r_asid,"hb".U(19.W))
//    expect(dut.io.r_g,false.B)
//    expect(dut.io.r_pfn0,"hccc".U(19.W))
//    expect(dut.io.r_pfn1,"h0dd".U(19.W))
//    expect(dut.io.r_c0,3.U(3.W))
//    expect(dut.io.r_d0,true.B)
//    expect(dut.io.r_v0,true.B)
//    expect(dut.io.r_c1,3.U(3.W))
//    expect(dut.io.r_d1,true.B)
//    expect(dut.io.r_v1,true.B)
//
//
//    // 写第12项
//    poke(dut.io.we,true.B)
//    poke(dut.io.w_index,12)
//    poke(dut.io.w_vpn2,"hccc".U(19.W))
//    poke(dut.io.w_asid,"hc".U(19.W))
//    poke(dut.io.w_g,false.B)
//    poke(dut.io.w_pfn0,"hddd".U(19.W))
//    poke(dut.io.w_pfn1,"h0ee".U(19.W))
//    poke(dut.io.w_c0,3.U(3.W))
//    poke(dut.io.w_d0,true.B)
//    poke(dut.io.w_v0,true.B)
//    poke(dut.io.w_c1,3.U(3.W))
//    poke(dut.io.w_d1,true.B)
//    poke(dut.io.w_v1,true.B)
//    poke(dut.io.r_index,12)
//    step(1)
//    //验证第12项
//    poke(dut.io.we,false.B)
//    expect(dut.io.r_vpn2,"hccc".U(19.W))
//    expect(dut.io.r_asid,"hc".U(19.W))
//    expect(dut.io.r_g,false.B)
//    expect(dut.io.r_pfn0,"hddd".U(19.W))
//    expect(dut.io.r_pfn1,"h0ee".U(19.W))
//    expect(dut.io.r_c0,3.U(3.W))
//    expect(dut.io.r_d0,true.B)
//    expect(dut.io.r_v0,true.B)
//    expect(dut.io.r_c1,3.U(3.W))
//    expect(dut.io.r_d1,true.B)
//    expect(dut.io.r_v1,true.B)
//
//
//    // 写第13项
//    poke(dut.io.we,true.B)
//    poke(dut.io.w_index,13)
//    poke(dut.io.w_vpn2,"hddd".U(19.W))
//    poke(dut.io.w_asid,"hd".U(19.W))
//    poke(dut.io.w_g,false.B)
//    poke(dut.io.w_pfn0,"heee".U(19.W))
//    poke(dut.io.w_pfn1,"h0ff".U(19.W))
//    poke(dut.io.w_c0,3.U(3.W))
//    poke(dut.io.w_d0,true.B)
//    poke(dut.io.w_v0,true.B)
//    poke(dut.io.w_c1,3.U(3.W))
//    poke(dut.io.w_d1,true.B)
//    poke(dut.io.w_v1,true.B)
//    poke(dut.io.r_index,13)
//    step(1)
//    //验证第13项
//    poke(dut.io.we,false.B)
//    expect(dut.io.r_vpn2,"hddd".U(19.W))
//    expect(dut.io.r_asid,"hd".U(19.W))
//    expect(dut.io.r_g,false.B)
//    expect(dut.io.r_pfn0,"heee".U(19.W))
//    expect(dut.io.r_pfn1,"h0ff".U(19.W))
//    expect(dut.io.r_c0,3.U(3.W))
//    expect(dut.io.r_d0,true.B)
//    expect(dut.io.r_v0,true.B)
//    expect(dut.io.r_c1,3.U(3.W))
//    expect(dut.io.r_d1,true.B)
//    expect(dut.io.r_v1,true.B)
//
//
//    // 写第14项
//    poke(dut.io.we,true.B)
//    poke(dut.io.w_index,14)
//    poke(dut.io.w_vpn2,"heee".U(19.W))
//    poke(dut.io.w_asid,"he".U(19.W))
//    poke(dut.io.w_g,false.B)
//    poke(dut.io.w_pfn0,"hfff".U(19.W))
//    poke(dut.io.w_pfn1,"h000".U(19.W))
//    poke(dut.io.w_c0,3.U(3.W))
//    poke(dut.io.w_d0,true.B)
//    poke(dut.io.w_v0,true.B)
//    poke(dut.io.w_c1,3.U(3.W))
//    poke(dut.io.w_d1,true.B)
//    poke(dut.io.w_v1,true.B)
//    poke(dut.io.r_index,14)
//    step(1)
//    //验证第14项
//    poke(dut.io.we,false.B)
//    expect(dut.io.r_vpn2,"heee".U(19.W))
//    expect(dut.io.r_asid,"he".U(19.W))
//    expect(dut.io.r_g,false.B)
//    expect(dut.io.r_pfn0,"hfff".U(19.W))
//    expect(dut.io.r_pfn1,"h000".U(19.W))
//    expect(dut.io.r_c0,3.U(3.W))
//    expect(dut.io.r_d0,true.B)
//    expect(dut.io.r_v0,true.B)
//    expect(dut.io.r_c1,3.U(3.W))
//    expect(dut.io.r_d1,true.B)
//    expect(dut.io.r_v1,true.B)
//
//
//    // 写第15项
//    poke(dut.io.we,true.B)
//    poke(dut.io.w_index,15)
//    poke(dut.io.w_vpn2,"hfff".U(19.W))
//    poke(dut.io.w_asid,"hf".U(19.W))
//    poke(dut.io.w_g,false.B)
//    poke(dut.io.w_pfn0,"h000".U(19.W))
//    poke(dut.io.w_pfn1,"h011".U(19.W))
//    poke(dut.io.w_c0,3.U(3.W))
//    poke(dut.io.w_d0,true.B)
//    poke(dut.io.w_v0,true.B)
//    poke(dut.io.w_c1,3.U(3.W))
//    poke(dut.io.w_d1,true.B)
//    poke(dut.io.w_v1,true.B)
//    poke(dut.io.r_index,15)
//    step(1)
//    //验证第15项
//    poke(dut.io.we,false.B)
//    expect(dut.io.r_vpn2,"hfff".U(19.W))
//    expect(dut.io.r_asid,"hf".U(19.W))
//    expect(dut.io.r_g,false.B)
//    expect(dut.io.r_pfn0,"h000".U(19.W))
//    expect(dut.io.r_pfn1,"h011".U(19.W))
//    expect(dut.io.r_c0,3.U(3.W))
//    expect(dut.io.r_d0,true.B)
//    expect(dut.io.r_v0,true.B)
//    expect(dut.io.r_c1,3.U(3.W))
//    expect(dut.io.r_d1,true.B)
//    expect(dut.io.r_v1,true.B)
//  }
//}
//
//class TLBtester extends ChiselFlatSpec {
//  it should s"correctly add randomly generated numbers" in {
//    Driver(() => new tlb(16))(c => new TLBtests(c)) should be (true)
//  }
//}
